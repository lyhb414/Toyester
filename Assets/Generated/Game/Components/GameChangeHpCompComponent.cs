//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.Stat.ChangeHpComp changeHpComp { get { return (Components.Stat.ChangeHpComp)GetComponent(GameComponentsLookup.ChangeHpComp); } }
    public bool hasChangeHpComp { get { return HasComponent(GameComponentsLookup.ChangeHpComp); } }

    public void AddChangeHpComp(bool newDirty, System.Collections.Generic.List<float> newChangeList) {
        var index = GameComponentsLookup.ChangeHpComp;
        var component = (Components.Stat.ChangeHpComp)CreateComponent(index, typeof(Components.Stat.ChangeHpComp));
        component.Dirty = newDirty;
        component.ChangeList = newChangeList;
        AddComponent(index, component);
    }

    public void ReplaceChangeHpComp(bool newDirty, System.Collections.Generic.List<float> newChangeList) {
        var index = GameComponentsLookup.ChangeHpComp;
        var component = (Components.Stat.ChangeHpComp)CreateComponent(index, typeof(Components.Stat.ChangeHpComp));
        component.Dirty = newDirty;
        component.ChangeList = newChangeList;
        ReplaceComponent(index, component);
    }

    public void RemoveChangeHpComp() {
        RemoveComponent(GameComponentsLookup.ChangeHpComp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherChangeHpComp;

    public static Entitas.IMatcher<GameEntity> ChangeHpComp {
        get {
            if (_matcherChangeHpComp == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ChangeHpComp);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherChangeHpComp = matcher;
            }

            return _matcherChangeHpComp;
        }
    }
}
