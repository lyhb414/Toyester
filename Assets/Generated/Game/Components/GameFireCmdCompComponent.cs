//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.Fire.FireCmdComp fireCmdComp { get { return (Components.Fire.FireCmdComp)GetComponent(GameComponentsLookup.FireCmdComp); } }
    public bool hasFireCmdComp { get { return HasComponent(GameComponentsLookup.FireCmdComp); } }

    public void AddFireCmdComp(float newAngle, int newCount) {
        var index = GameComponentsLookup.FireCmdComp;
        var component = (Components.Fire.FireCmdComp)CreateComponent(index, typeof(Components.Fire.FireCmdComp));
        component.Angle = newAngle;
        component.Count = newCount;
        AddComponent(index, component);
    }

    public void ReplaceFireCmdComp(float newAngle, int newCount) {
        var index = GameComponentsLookup.FireCmdComp;
        var component = (Components.Fire.FireCmdComp)CreateComponent(index, typeof(Components.Fire.FireCmdComp));
        component.Angle = newAngle;
        component.Count = newCount;
        ReplaceComponent(index, component);
    }

    public void RemoveFireCmdComp() {
        RemoveComponent(GameComponentsLookup.FireCmdComp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFireCmdComp;

    public static Entitas.IMatcher<GameEntity> FireCmdComp {
        get {
            if (_matcherFireCmdComp == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FireCmdComp);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFireCmdComp = matcher;
            }

            return _matcherFireCmdComp;
        }
    }
}
